opts =  namespace(nTry=60,
          gSeed=119,
          dataSeed=99,
          R=0.01,
          dataopts=namespace(d1=8,
                             d2=8,
                             r=1,
                             N1=32,
                             N2=32,
                             S_2norm=0.04,
                             armtype='gaussian',
                             R=0.01),
          T=10000,
          lam=1.0,
          args=Namespace(algo='bltwostage-bm-sp_simple2', lam=None, r='1', R='0.01', d='8', prefix=None, armtype=None, dataname='sphericalgaussian', T='10000', tuning_grid='1', nTry='60'),
          tuningGrid=1)
  0%|          | 0/60 [00:00<?, ?it/s]/Users/jang-kyoungseok/Desktop/Anaconda/anaconda3/envs/NeurIPS2023_lowrank/lib/python3.11/site-packages/cvxpy/expressions/expression.py:612: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 1 times so far.

  warnings.warn(msg, UserWarning)
/Users/jang-kyoungseok/Desktop/Anaconda/anaconda3/envs/NeurIPS2023_lowrank/lib/python3.11/site-packages/cvxpy/expressions/expression.py:612: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 2 times so far.

  warnings.warn(msg, UserWarning)
/Users/jang-kyoungseok/Desktop/Anaconda/anaconda3/envs/NeurIPS2023_lowrank/lib/python3.11/site-packages/cvxpy/expressions/expression.py:612: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 3 times so far.

  warnings.warn(msg, UserWarning)
/Users/jang-kyoungseok/Desktop/Anaconda/anaconda3/envs/NeurIPS2023_lowrank/lib/python3.11/site-packages/cvxpy/expressions/expression.py:612: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 4 times so far.

  warnings.warn(msg, UserWarning)
  0%|          | 0/60 [00:00<?, ?it/s]

################################################################################
#----- tryIdx =     0
(la.norm(data.Th), la.norm(data.Th,2)) =  (0.04, 0.04)
data.expt_reward[0,0] =  -0.003050272520689757
paramList =  [ParamBlTwoStage(C_T1=1.0, multiplier=0.01),
 ParamBlTwoStage(C_T1=1.0, multiplier=0.03162277660168379),
 ParamBlTwoStage(C_T1=1.0, multiplier=0.1),
 ParamBlTwoStage(C_T1=1.0, multiplier=0.31622776601683794),
 ParamBlTwoStage(C_T1=1.0, multiplier=1.0),
 ParamBlTwoStage(C_T1=1.7782794100389228, multiplier=0.01),
 ParamBlTwoStage(C_T1=1.7782794100389228, multiplier=0.03162277660168379),
 ParamBlTwoStage(C_T1=1.7782794100389228, multiplier=0.1),
 ParamBlTwoStage(C_T1=1.7782794100389228, multiplier=0.31622776601683794),
 ParamBlTwoStage(C_T1=1.7782794100389228, multiplier=1.0),
 ParamBlTwoStage(C_T1=3.1622776601683795, multiplier=0.01),
 ParamBlTwoStage(C_T1=3.1622776601683795, multiplier=0.03162277660168379),
 ParamBlTwoStage(C_T1=3.1622776601683795, multiplier=0.1),
 ParamBlTwoStage(C_T1=3.1622776601683795, multiplier=0.31622776601683794),
 ParamBlTwoStage(C_T1=3.1622776601683795, multiplier=1.0),
 ParamBlTwoStage(C_T1=5.623413251903491, multiplier=0.01),
 ParamBlTwoStage(C_T1=5.623413251903491, multiplier=0.03162277660168379),
 ParamBlTwoStage(C_T1=5.623413251903491, multiplier=0.1),
 ParamBlTwoStage(C_T1=5.623413251903491, multiplier=0.31622776601683794),
 ParamBlTwoStage(C_T1=5.623413251903491, multiplier=1.0),
 ParamBlTwoStage(C_T1=10.0, multiplier=0.01),
 ParamBlTwoStage(C_T1=10.0, multiplier=0.03162277660168379),
 ParamBlTwoStage(C_T1=10.0, multiplier=0.1),
 ParamBlTwoStage(C_T1=10.0, multiplier=0.31622776601683794),
 ParamBlTwoStage(C_T1=10.0, multiplier=1.0)]

#- paramIdx =     0
algoParam =  ParamBlTwoStage(C_T1=1.0, multiplier=0.01)
self.T1 =  15
Traceback (most recent call last):
  File "/Users/jang-kyoungseok/Documents/GitHub/230925-low-rank-project/210425_run_expr01.py", line 111, in <module>
    [rewardAry, armPairAry, dbgDict] = run_bilinear_bandit(algo, data, opts.T)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jang-kyoungseok/Documents/GitHub/230925-low-rank-project/blbandits_with_efalb_210425.py", line 1505, in run_bilinear_bandit
    next_arm_pair, radius_sq = learner.next_arm()
                               ^^^^^^^^^^^^^^^^^^
  File "/Users/jang-kyoungseok/Documents/GitHub/230925-low-rank-project/blbandits_with_efalb_210425.py", line 1075, in next_arm
    from matrixrecovery import rankone
  File "/Users/jang-kyoungseok/Documents/GitHub/230925-low-rank-project/matrixrecovery/__init__.py", line 4, in <module>
    from .matrixrecovery import rankone
  File "/Users/jang-kyoungseok/Documents/GitHub/230925-low-rank-project/matrixrecovery/matrixrecovery.py", line 1, in <module>
    import myutils_cython
ModuleNotFoundError: No module named 'myutils_cython'
